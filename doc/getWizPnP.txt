NAME

    getWizPnP - list and fetch recordings from a Beyonwiz DP series over the
    network using the WizPnP interface

SYNOPSIS

        getWizPnP [--help|-h] [--version]
                  [--device dev|-D dev] [--maxdevs=devs|-m devs]
                  [--longNames]
                  [--host=host|-H host] [--port=port|-p port]
                  [--list|-l] [--List|-L] [--check|-c]
                  [--copy|-C] [--delete|-X] [--move|-M] [--dryrun|-n]
                  [--media=exts] [--stopFolders=folderlist]
                  [--nameFormat=fmt|-T fmt] [--dateFormat=fmt]
                  [--folder=folderlist|-f folderlist]
                  [--recursive|--all|-a]
                  [--regexp|-r] [--expression|-e] [-BWName|-B]
                  [--sort=sortcode|-s sortcode]
                  [--dictionarySort=ignoretype|-i ignoretype]
                  [--dictStoplist=words|-S words]
                  [--date|-d] [--episode|-E] [--ts|-t] [--join|-j]
                  [--before=datetime] [--since=datetime]
                  [--reconstruct[=[maxscan],[frac],[fixed]]]
                  [--resume|-R] [--force|-F][--retry=n]
                  [--delay=time]
                  [--outDir=dir|-O dir] [--inDir=dir|-I dir]
                  [--verbose|-v] [--Verbose=level|-V level] [--quiet|-q]
                  [--debug=debugcode] [--index|-x]
                  [--discover] [--wizpnpPoll=npoll] [--wizpnpTimeout=timeout]
                  [ recording match patterns... ]\n";

DESCRIPTION

    List, check, fetch, move or delete the recordings on a Beyonwiz DP
    series PVR over the network using the *WizPnP* interface. If --inDir is
    specified, perform the same operations on the computer where *getWizPnP*
    is running. --inDir is most useful in combination with --ts.

    If no pattern arguments are given, then all recordings in the included
    folders are listed. Otherwise recordings matching any of the patterns
    are fetched (or listed, moved or deleted, with --list, --move or
    --delete respectively).

    So:

        getWizPnP.pl

    will list all recordings in the Beyonwiz's Recordings folder, while

        getWizPnP.pl Simpsons

    will copy all recordings of *The Simpsons* (and any other recordings
    with "simpsons" in the title or episode name).

    In the absence of --regexp or --expression a pattern matches if it is a
    substring of the string *servicename*#*longtitle*#*date*, case
    insensitive. The *longtitle* is just the title if the header has no
    episode information, otherwise it is *title*/*episodename*. The format
    of *date* defaults to *yyyy*"-"*mm*"-"*dd* *HH*"-"*MM*, but it is
    changed by the --dateFormat option. The default is "dateFormat=default",
    which itself is equivalent to "dateFormat=isoLike".

    For example:

        SC10 Canberra#MOVIE: Pride & Prejudice#2008-02-15 20-28

    or

        WIN TV Canberra#Underbelly/Team Purana#2012-05-25 19-30

    To download all recordings, an empty string will match everything:

        wizGetPnP.pl ''

    Recordings are copied or moved to a name corresponding to their event
    name (title) with any characters that are illegal in the file system
    changed to '_'. The --date option adds the day and date of the recording
    to the name, and the --episode option adds the episode name to the
    recording name (if there is one set) -- helpful for series recordings.
    Downloaded recordings are placed in the current directory unless
    --outDir has been specified.

    When listing recordings, recordings that are currently recording are
    flagged with "*RECORDING NOW" next to the recording name, recordings
    that have File Lock set are flagged with *LOCKED, and recordings with
    AC3 (Dolby Digital) are flagged *AC3. The tags are not part of the name
    for matching. getWizPnP won't fetch recordings that are currently in
    progress.

    The default is for getWizPnP to perform its operations on the recordings
    directly in in the "Recordings" folder (and not in its subfolders). See
    the --folder option for how to view the contents of other folders, and
    the --recursive option for how to perform operations on a folder and all
    its subfolders.

BEYONWIZ NAMES

    The default in getWizPnP is to try to use the WizPnP device discovery
    protocol (Simple Service Discovery Protocol, SSDP) to find any Beyonwiz
    servers on the local net.

    To do this, the Perl library module "IO::Socket::Multicast" must be
    installed on the machine running getWizPnP. If it isn't, then device
    discovery can't be used, and the Beyonwiz device must be addressed using
    --host (and possibly also --port). See the "README.txt" file in the
    distribution folder for more details of how to install missing modules.

    Beyonwiz WizPnP servers allow you to set the name of each server in
    "SETUP>Network>WizPnP>Name".

    getWizPnP works best if each server is given a different name. This
    helps prevent confusion in other WizPnP clients, too.

    If for some reason, you want to have WizPnP servers with the same name,
    see the --longNames option.

    If you want to have the --longNames set by default, set the $longNames
    variable in the configuration file.

    More compact names for Beyonwiz devices are generated by --longNames if
    the Perl library module "IO::Interface::Simple" is installed on the
    machine running getWizPnP. See the "README.txt" file in the distribution
    folder for more details on how to install missing modules.

ARGUMENTS

    GetWizPnP takes the following arguments:

    help
          --help
          -h

        Print a short help message on *stderr* and exit (overrides all other
        options except --version). When used with --version, prints the
        version number, then the help message, and exits.

    version
          --version

        Print *getWizPnP*'s version on *stderr* and exit (overrides all
        other options except --help). When used with --help, prints the
        version number, then the help message, and exits.

    device
          --device=dev
          -D device

        Connect to a matching WizPnP *device* as named in the Beyonwiz
        "SETUP>Network>WizPnP>Name". A name matches if *dev* is a substring
        of the Beyonwiz name (case ignored). For example, "--device=be"
        matches device name "MyBeyonwiz".

        If no *device* is named and the WizPnP search finds only one WizPnP
        device, that device is used. Otherwise, if a device is named but
        isn't found, *getWizPnP* returns with an error.

        See --longNames for how to distinguish Beyonwiz servers whan they
        have the same name.

    maxdevs
          --maxdevs=devs
          -D devs

        In a WizPnP search, stop searching when the number of WizPnP devices
        found is *devs*, rather than waiting for the search to time out
        (currently 0.9 seconds). If set to zero, there is no limit; the
        search continues looking for devices until it times out. *Devs*
        defaults to 0 (exhaustive search).

    longNames
            --longNames
            -N
            --nolongNames
            -noN

        If your WizPnP servers do not have unique names (case is ignored),
        then using --longNames adds a unique suffix to each server name so
        they can be distinguished by --device. The long name consists of the
        name set in "SETUP>Network>WizPnP>Name" on the Beyonwiz, followed by
        the host part of the device's IP address, and the WizPnP port number
        (set in "SETUP>Network>WizPnP>Port"), all separated by minus signs
        ("-").

        If a server has name "MyBeyonwiz", IP address 10.1.1.4, netmask
        255.255.255.0 and the default port number 49152, then its long name
        would be "MyBeyonwiz-4-49152".

        If the Perl library module "IO::Interface::Simple" is not installed
        on the machine running getWizPnP, then --longNames uses the full IP
        address of the Beyonwiz device instead of its host address. In the
        example above, the long name would be "MyBeyonwiz-10.1.1.4-49152" if
        "IO::Interface::Simple" is not available. No warning or error
        message is given if this form of long name is used. See "BEYONWIZ
        NAMES" above.

    host
          --host=host
          -h host

        Connect to the *host* (DNS name or dotted-quad IP address) instead
        of using WizPnP search to find the Beyonwiz, or instead of the
        default set in the configuration file.

        If the device name is specified with --device then the configuration
        returned by *host* that contains the WizPnP name of the device must
        match (case insensitive) the device name given by --device.

        Using --host potentially allows a Beyonwiz's recordings and media
        files to be accessed anywhere on the Internet. Using WizPnP device
        discovery will only work on the local (sub)net.

    port
          --port=port
          -p port

        Connect to the *port* instead of the Beyonwiz default (49152), or
        the default set in the configuration file (see "FILES" below).
        *Port* is ignored unless --host is set.

    copy
          --copy
          -C

        Copy the recordings. This is the default operation if the command
        has selection *patterns*.

    list
          --list
          -l

        List the matching recordings. This is the default operation if the
        command has no selection *patterns*.

    delete
          --delete
          -X

        Delete the matching recordings, rather than copying them. If File
        Lock is set on the recording, the operation will be skipped and a
        warning message printed. The operation can be forced by using
        --force. Delete uses an undocumented feature of WizPnP. See "BUGS".

    move
          --move
          -M

        Move the specified recordings to the output directory. Equivalent to
        a copy followed by a delete for each matching recording. If File
        Lock is set on the recording, the operation will be skipped and a
        warning message printed. The operation can be forced by using
        --force. Move uses an undocumented feature of WizPnP. See "BUGS".

    media
            --media=exts

        Specify the set of file name extensions that are recognised as media
        files. The default set can also be specified in the configuration
        file.

        Media file name extension matching is case-insensitive.

        Beyonwiz TV and radio recordings on the computer running getWizPnP
        are also recognised if they have no filename extension on their
        folder. This is to allow recognition of recordings copied using old
        versions of *getWizPnP* which did not add a .tvwiz/.radwiz extension
        to the folder name. This feature may be removed in future versions.

        Recognition of these beyonwiz-format recordings cannot be controlled
        by "--media".

        The user-specified default can be over-ridden by the program
        defaults by specifying exactly one extension option with the name
        default, i.e. "--media=default". This means that there is no way to
        have "default" as the only recognised media file name extension.

        Multiple extensions can be given either as a comma-separated list in
        one option (e.g. "--media=jpg,mpg") or as multiple options (e.g.
        "--media=jpg --media=mpg").

        The program default set of extensions is:

            263   aac  ac3  asf   avi bmp    divx dts  gif
            h263  iso  jpeg jpg   m1s m1v    m2p  m2t  m2t_192
            m2v   m4a  m4p  m4t   m4v mkv    mov  mp3  mp4
            mpeg  mpg  ogg  pcm   png radwiz rpcm smi  srt
            sub   tiff ts   tvwiz vob wav    wiz  wma  wmv
            wmv9

        This list was extracted from the wizdvp binary in the Beyonwiz
        firmware, and may have errors or omissions.

    stopFolders
            --stopFolders=folderlist

        *folderList* is a comma-separated list of folder names that are to
        be excluded when building the recordings & media list on the local
        computer when --inDir is used.

        On Windows and Cygwin this defaults to the folders
        "Recycled,RECYCLER,System Volume Information", on Mac OS X to
        ".Trash,.Trashes", and on Unix and Linux systems to
        "lost+found,.Trash".

    nameFormat
            --nameFormat=fmt
            -T fmt

        Specify how the names of recordings and media files will be
        generated when they are copied or moved. *fmt* is a text string with
        codes in it that are expanded in the file or folder name.

        The general of the codes is %=[*sep*]*code*. *Sep* is an optional
        separator character. If the field specified by *code* exists and is
        not empty, then the field is preceded by a separator made up of
        *sep* with a single space before it, and a single space following
        it. If *sep* is not specified, then the field is simply appended
        directly to the name being constructed.

        The allowed values for *code* are:

        S

        The name of the broadcast service (e.g. ABC1) that the file or
        recording was made from. Will not be set for media that are not
        Beyonwiz recordings.

        T

        The title of the recording or file. Constructed from the file name
        for media files.

        E

        The episode name of the recording. Will not be set for media that
        are not Beyonwiz recordings.

        D

        The date of the recording. The most recently modified time for media
        files stored on computer file systems. The format of the date
        defaults to an ISO-likeformat "YYYY-MM-DD HH-MM" (e.g. 2009-02-22
        20-30). The format of the date can be set using --dateFormat.

        Codes from --dateFormat are also interpreted if they are present in
        *fmt*, but it is probably cleaner to change the date format using
        --dateFormat.

        Any other text is included as-is in the generated name.

        The default value for --nameFormat is "%=T".

        A number of "canned" formats are available, and are specified when
        *fmt* is exactly equal to one of the format names:

        default

        "%=T" Scrapheap Challenge

        short

        "%=T" Scrapheap Challenge

        series

        "%=T%=-D%=-E" Scrapheap Challenge - 2009-03-04 18-33 - The Scrappy
        Races Part 2

        long

        "%=S%=-T%=-D%=-E" - ABC2 - Scrapheap Challenge - 2009-03-04 18-33 -
        The Scrappy Races Part 2

        episodeonly

        "%=E" - The Scrappy Races Part 2

        --nameFormat can be used to give a fixed name to a recording when it
        is copied or moved, but care should be taken that only a single
        recording is specified.

        The rules for eliminating characters not permitted by the file
        system still hold. This means that, for example, ':' will not appear
        in a name generated on Windows, even if you specify it explicitly.

        The default --nameFormat can be set in the configuration file and
        the list of canned formats can be modified or extended (user
        definitions override program definitions where both are specified).

        Also see --episode, --date and --dateLast.

    dateFormat
         --dateFormat=fmt

        Uses the POSIX "strftime" function
        <http://www.kernel.org/doc/man-pages/online/pages/man3/strftime.3.ht
        ml> to encode dates and times for the "%=D" code in --nameFormat.
        There is some variation in the codes supported in various
        implementations of "strftime". The perl documentation for "strftime"
        recommends the use of the codes "aAbBcdHIjmMpSUwWxXyYZ%" for
        portability, but you can use whatever codes your system allows.

        --dateFormat defaults to "%Y-%m-%d %H-%M", (e.g. 2009-02-22 20:30)
        which uses only codes from the portable set. This is the "canned"
        format "default", below.

        A number of "canned" formats are available, and are specified when
        *fmt* is exactly equal to one of the format names:

        default

        "%Y-%m-%d %H-%M" - 2009-02-20 20-30

        compat

        "%a %b %e %Y" - Fri Feb 20 2009 (the date format formerly used in
        getWizPnP)

        readable

        "%H:%M %a %b %e %Y" - 20:30 Fri Feb 20 2009 "human-readable"
        date/time stamp that distinguishes the time of day.

        isoLike

        "%Y-%m-%d %H-%M" - 2009-02-20 20-30 - more readble, ISO-like date,
        whose string sorts by time.

        iso

        "%Y%m%dT%H%M" - 20090220T2030 - strict ISO format, very compact,
        string sorts by date.

        unix

        "%a %b %e %H:%M:%S %Z %Y" - Fri Feb 20 20:30:00 EST 2009 -
        traditional Unix format.

        The canned formats compat, readable and unix use a common, but
        possibly not completely portable day-of-month code, %e.

        The default --dateFormat can be set in the configuration file and
        the list of canned formats can be modified or extended (user
        definitions override program definitions where both are specified).

        As in --nameFormat, the rules for eliminating characters not
        permitted by the file system still hold. This means that, for
        example, ':' will not appear in a name generated on Windows, even if
        it is specified explicitly.

    folder
            --folder=foldername
            -f folder

        Restrict the operations to the named folder. More that one --folder
        option may be given, the operations apply to all the named folders.
        If no folders are named, operations are on the top level recording
        folder (equivalent to specifying --folder=Recordings or -f
        recordings).

        Case is ignored in naming folders, even on Unix/Linux systems.

        --folder defaults to "--folder=recordings". Older versions allowed
        subfolders to be specified by their name relative to Recordings
        (e.g. recordings/Movies was specified by "--folder=Movies"). Now the
        full name must be given, i.e. "--folder=recordings/Movies". But you
        can now also specify "--folder=content/Movies" (for example). To see
        all recordings and media on the Beyonwiz, use "--folder=/ --all".

        Recordings can be specified with either relative or absolute path
        names, but they have the same meaning. The path separator characters
        can be either the Unix-like / or the DOS-like \. Case is ignored in
        folder name comparisons. So Recordings/Movies/Comedy,
        /recordings/movies/CoMeDy and recordings\movies\comedy all refer to
        the same folder (on Unix, the \ will need to be quoted). Unlike Unix
        and DOS, folder names . and .. have no special meaning, and will
        simply cause any folder match to fail.

        Media and recordings in the "content" folder can also be accessed
        using getWizPnP, by using --folder=content. Subfolders of "content"
        can also be accessed in the same way as in the recordings folder,
        for example as content/MovieArchive/Drama. Case is ignored in names
        here, too, and either / or \ can be used as path separators.

        To operate on everything on the Beyonwiz internal HDD, use
        --folder=/ --recursive.

        If the Beyonwiz is running firmware 01.05.261 or earlier, only
        recordings directly in the recordings folder are accessible, and
        using anything but the default folder will mean that no recordings
        are visible.

        If --inDir is used, then all recordings in that folder will appear
        to be in the top level folder seen by *getWizPnP*. If any foldername
        except "--folder=" (or "--folder=/") is used, no recordings will be
        found.

    recursive
          --recursive
          --all
          -a
          --norecursive
          --noall
          --noa

        Recursively examine all subfolders under the folders specified by
        --folder for recordings, as well as just the recordings directly in
        the spscified folders.

        Has no effect if the Beyonwiz is running firmware 01.05.261 or
        earlier.

    regexp
          --regexp
          -r
          --noregexp
          --nor

        Carry out the matches using the argument as a case-insensitive Perl
        regular expression. For example:

            getWizPnP --regexp 'ABC|SBS'

        will copy all recordings made from either the ABC or SBS.

        --noregexp and --nor undo the setting of this option; useful if this
        option is set by default in the user's configuration file.

    expression
          --expression
          -e
          --noexpression
          --noe

        Evaluates the match arguments as Perl expressions with $_ set to the
        *servicename*#*title*#*date* string. If any expression evaluates to
        true (in Perl terms), the recording is matched.

            getWizPnp --expression '/ABC|SBS/i'

        is equivalent to the --regexp example above. Quite powerful; the
        Swiss Army knife approach.

        --noexpression and --noe undo the setting of this option; useful if
        this option is set by default in the user's configuration file.

    sort
            --sort=sortcode
            -s sortcode

        Sort the output according to the value of *sortcode*. *Sortcode* is
        a string made up of the codes: uu (unsorted), az (title alphabetic
        ascending), za (title alphabetic descending), fa (folder name
        alphabetic ascending), fd (folder name alphabetic descending), ta
        (date and time of day ascending), td (date and time of day
        descending), da (date ascending) and dd (date descending). The
        default *sortcode* is faazta (folder name ascending, title
        alphabetic ascending, time ascending). Date and time of day
        descending is to match the Beyonwiz default sort order (and only
        sort order in older firmware). Later codes in the string are only
        checked if entries are equal on all earlier codes. The default
        *sortcode* sorts on folder name, then title (not including episode
        title), then from earliest to latest for the same title & folder
        name.

        The detail sort order for sorting on title is controlled by
        --dictionarySort, and the default order is "exact".

        Case is ignored for the folder name sort order.

        If the uu code is used anywhere in the string, the output is
        unsorted.

        Sorting on titles only works with Beyonwiz firmware 01.05.261 and
        later. Even where it works, sorting by name of recordings on the
        Beyonwiz may differ from the strictly ACSII ordering of some
        punctuation, because there's no fast way to get the exact title
        punctuation.

        On some earlier firmware, sorting on time won't work if the
        recording has been renamed.

    dictionarySort
            --dictionarySort=ignoretype
            -i ignoretype

        Specifies the style of sorting on the title. *Ignoretype* is a
        comma-separated string of movie (m), punctuation (p), space (s),
        stoplist (st), case (c), exact (none, e, n) or all (a). Either the
        longer or the shorter form(s) in parentheses may be used.

        When sorting the recordings by title (--sort=*sortcode*):

        movie (m)

        ignores any MOVIE: substring at the start of a title (case
        insensitive, even if the rest of the match is case sensitive);

        punctuation (p)

        ignores all characters except alphanumerics and white space;

        space (s)

        ignores white space in the title.

        stoplist (st)

        ignores any words in the *dictStoplist* when they occur at the start
        of a title (will only work correctly on recordings with a MOVIE:
        prefix if movie is also set);

        case (c)

        ignores case in alphabetic characters;

        exact (none, e, n)

        exact match (none of the above);

        all (a)

        all of the above, except exact

        The default is exact.

        The keywords are evaluated in order, and added to the default set of
        options, except for exact. Using exact clears all options and any
        following options become the only ones used.

            --dictionarySort=case,punctuation

        adds case and punctuation to the current set of options.

            --dictionarySort=exact,case,punctuation

        makes the options just case and punctuation.

        Multiple --dictionarySort options may be used.

            --dictionarySort=exact --dictionarySort=case,punctuation

        has the same effect as

            --dictionarySort=exact,case,punctuation

    dictStoplist
            --dictStoplist=words
            -S word

        Use the word(s) specified by the comma-separated list of *words* as
        the words ignored by --dictionarySort when they appear at the start
        of a title. The default list is A, An, The. Specifying any words
        with --dictStoplist overrides the stoplist. Multiple instances of
        --dictStoplist add to the list.

            --dictStoplist=a,an --dictStoplist=the

        has the same effect as

            --dictStoplist=a,an,the

        Case is ignored checking for these words only if case is set in
        --dictionarySort.

    episode
          --episode
          -E
          --noepisode
          --noE

        Add the recording episode name (if there is one) to a recording when
        it's downloaded. Adds the episode name to the end of the
        --nameFormat string after the date if it's set by --date or before
        the date it it's set by --dateLast. Useful for downloading series.

    date
          --date
          -d
          --nodate
          --nod

        Add the recording day and date (in the format set by --dateFormat)
        to the name of the recording when it's downloaded. Useful for
        downloading series. Adds the date to the end of the --nameFormat
        string before the episode name if it's set by --episode. Using
        "--date --episode" will generate names that sort in order of the
        episode recording date if the default --dateFormat is used, or if
        --dateFormat is any of default, iso or isoLike.

    dateLast
          --dateLast
          --nodateLast

        Add the recording day and date (in the format set by --dateFormat)
        to the name of the recording when it's downloaded. Useful for
        downloading series. Adds the date to the end of the --nameFormat
        string after the episode name if it's set by --episode.

    since
          --since=timeString

        Restricts *getWizPnP* to operate on recordings made since the time
        given in the time string. If the time string specifies only the day,
        it is recordings since 00:00 in the morning of the day concerned, so
        "--since today" will operate on anything recorded today.

        The format of *timeString* is intended to allow for relatively
        free-form conversational dates and times, as well as more formal
        dates, but some uses may find them unintuitive. For example, "1 day
        before yesterday" is not recognised, but "yesterday 1 day ago" is
        recognised (as the same thing).

        More documentation of the formats allowed is on CPAN
        <http://search.cpan.org/~schubiger/DateTime-Format-Natural-0.99/lib/
        DateTime/Format/Natural/Lang/EN.pm>. Dates with '/' are in the form
        d/m/y, not m/d/y.

    since
          --before=timeString

        Restricts *getWizPnP* to operate on recordings made before the time
        given in the time string. If the time string specifies only the day,
        it is recordings before 00:00 in the morning of the day concerned,
        so "--before today" will operate on anything recorded before (the
        start of) today.

        See --since for the format of *timeString*.

    ts
          --ts
          -t
          --nots
          --not

        Download Beyonwiz recordings as single ".ts" (MPEG Transport Stream)
        files, rather than copying in the Beyonwiz internal recording
        format.

        --nots and --not undo the setting of this option; useful if this
        option is set by default in the user's configuration file.

    stdout
          --stdout
          --nostdout

        Output the downloaded recordings to standard output. Sets --ts and
        --join if set, even if --Lno<ts> and --Lno<join> are specified in
        the command line.

        Useful if you want to send the recording to standard output of some
        other program, or use it in some other configuration using POSIX
        pipes or similar. Mainly intended for use to stream recordings and
        media direct from the Beyonwiz to a player without the need for
        temporary files.

        Only has any effect in the *copy* and *move* operations (whether
        resulting from explicit command-line options or implicitly). Prints
        a warning message and has no other effect for other operations.

        When --stdout is used with *copy* and *move* operations any output
        that would normally be sent to standard output (e.g, the output
        generated by --verbose or --debug) will be sent to standard error
        instead.

        --nostdout undoes the setting of this option; useful if this option
        is set by default in the user's configuration file.

        --stdout gives a fatal error if standard output is is a terminal.

    join
          --join
          -j
          --nojoin
          --noj

        Download media files stored in Beyonwiz ".wiz" folder as single
        files, rather than copying in the Beyonwiz internal recording
        format.

        Defaults to --join. --nojoin is useful for copying media folders
        as-is from the Beyonwiz for examination on a PC.

        --nojoin and --noj undo the setting of this option.

    reconstruct
          --reconstruct[=[percen],[fixed],[maxscan],[minscan]]

        Try to reconstruct the "stat" and "trunc" header files in the
        recording if they are missing. Sometimes "missing" header files have
        actually been renamed to incorrect names by bugs in the Beyonwiz.
        Even without --reconstruct, *getWizPnP* will try some of the
        well-known incorrect names.

        Reconstruction should normally be able to recover unedited normal
        recordings completely.

        Edits in the recording performed on the Beyonwiz can only be
        partially reconstructed.

        Short cut-outs in the recording may re-appear in full. Other edits
        are likely to no longer accurately reflect the original editing.
        Recordings trimmed at the end may have problems with navigation in
        the last 30 sec or so of the recording. Recordings from the
        timeshift buffer and recordings that have been trimmed at the start
        may have some problems with navigation. Recordings with internal
        editing may not play correctly across the edit locations in the
        original. Where a recording has gaps in the sequence of the data
        files that make up the Beyonwiz native recording format, a list of
        these gaps is printed. These are the locations where playback or
        navigation problems are most likely to occur.

        However, --reconstruct should be able to recover all the recording
        data that is on the Beyonwiz, even if the recording does not play
        correctly on the Beyonwiz.

        The "trunc" header file normally contains a list of all the parts of
        all recording data files that make up the recording. These are 32MiB
        files with names that are 4-digit numbers. Unedited normal
        recordings start with file number 0000, then 0001, 0002, etc. Edited
        recordings and recordings from the timeshift buffer may not start
        with 0000 and may have breaks in the sequence.

        The *WizPnP* protocol that *getWizPnP* uses does not allow
        *getWizPnP* to load a list of the recording data files from the
        Beyonwiz, so it must scan for them. The four optional parameters to
        --reconstruct, *percen*, *fixed*, *maxscan* and *minscan*, allow
        control of that scan.

        *Maxscan* is the maximum value of the data recording file number
        that --reconstruct will use when it searches for the start of the
        recording. It must be an integer between 0 and 9999. *Minscan* is
        used as the first value to test for the scan. It is a fatal error
        for *minscan* to exceed *maxscan*. Both are silently set to 9999 if
        they are greater than 9999.

        Once the start of the recording has been found, *getWizPnP*
        estimates the upper limit of its scan to find the rest of the files
        by dividing the recording size (in the "header.tvwiz" header) by
        32MiB, and then adjusting this to allow for editing. The number of
        files scanned is calculated as: *ceil*((*size* * (1 + *percen*/100)
        + *fixed*) / 32MiB).

        *fixed* may take suffixes "k", "M" or "G" for 10^3, 10^6 and 10^9
        respectively, or "ki", "Mi" or "Gi" for 2^10, 2^20 or 2^30,
        respectively. The suffix may be followed by an optional "B", which
        has no effect, so "4ki" and "4kiB" both denote 4096 bytes.

        If there is no suffix, *fixed* is interpreted as a number of
        recording data files. That is, it is effectively has a multiplier of
        32MiB, 5 as a value for *fixed* denotes 167772160 bytes.

            --reconstruct

        alone is equivalent to

            --reconstruct=0.2,5,200,0

        Fields may be empty, and trailing empty fields may be omitted. Empty
        fields leave the corresponding default unchanged, so:

            --reconstruct=,10

        is equivalent to

            --reconstruct=0.2,10,200,0

    resume
          --resume
          -R
          --noresume
          --noR

        Allow resumption of downloading of recordings that appear to be
        incomplete.

    force
          --force
          -F
          --noforce
          --noF

        Allow downloads to overwrite existing recordings that appear to be
        complete. If --reconstruct is also set, then also force
        reconstruction of the "stat" and "trunc" header files even if they
        can be found. The interaction with --reconstruct is mainly intended
        for debugging use.

    retry
          --retry=n

        Automatically try to resume recording downloads (--copy or --copy)
        up to <n> times on particular kinds of HTTP error. The *n* retries
        are in addition to the initial download request. There is a short
        pause (2 sec) before each attempted retry. These retries resume
        recording downloads even if the original download did not have
        --resume set.

        At the moment, retries are only attempted for HTTP "BAD_REQUEST"
        errors.

        The main intention of this option is to help overcome a problem with
        downloads from Windows systems, which occasionally fail with
        "BAD_REQUEST" for an unknown reason.

        *This option may be removed at some future time if the underlying
        problem is fixed*.

    delay
          --delay=time

        Delay *time* seconds between HTTP requests when downloading a
        recording from a Beyonwiz. *Time* may be given in floating point, so
        using, say, "--time=0.5" should work as expected.

        The main intention of this option is to try to help overcome a
        problem with downloads from Windows systems, which occasionally fail
        with "BAD_REQUEST" for an unknown reason.

        *This option may be removed at some future time if the underlying
        problem is fixed*.

    verbose
          --verbose
          -v

        Provide more information. Each --verbose increases the verbosity
        level by 1 from 0 (the default), or from the setting of $verbose in
        the configuration file, if it is set there.

        Verbosity level 1 lists some more details about the recordings, and
        shows a progress indicator when copying. The progress indicator
        shows the transfer rate for the last 20 mebibytes copied while the
        transfer is running, and the average transfer rate for the copy when
        the copy completes. Level 2 includes the program synopsis, if there
        is one. Level 3 includes a display of any bookmarks in the file.
        Level 4 includes the recording's index name, even if --index is not
        set.

        The units used in the verbose listings are in terms of megabytes
        (MB) and megabits (Mb). Mega- is strictly used as meaning 10^6
        (1000000), not as a shorthand for mebi-, the ISO name for a
        multipler of 2^20 (1204*1024 = 1048576). Mebi- is about 5% more than
        mega-.

        See also --Verbose

    Verbose
          --Verbose=level
          -V level

        Sets the verbosity level to *level*. This overrides any setting of
        $verbose in the configuration file.

        --Verbose and --verbose options are processed in order. Assuming
        that $verbose isn't set to non-zero in the config file, "-vv -V=1"
        sets the verbosity level to 1, but "-V=1 -vv" sets it to 3.

        Mixing --Verbose and --verbose probably doesn't help with clarity in
        commands.

        See also --verbose.

    debug
          --debug=debugcodes

        Prints some technical debugging information about a Beyonwiz
        recording. The options print nothing for non-Beyonwiz media files.
        The debug options are a comma-separated list of:

        pids prints the Transport Stream Packet IDs in the recording header,
        along with the header "magic number" and version number.

        trunc prints information from the "trunc" header file, and displays
        a list of the file fragments that make up the recording.

        offsets prints a listing of the time/recording offset information
        for the file. This can be a long listing (one line for every 10
        seconds of the recording).

        stat prints the recording size in the "stat" file.

        all enables all debug options.

        Any unique substring in debugcodes matches the option. "--debug=p,t"
        is equivalent to "--debug=pids,trunc". If a *debugcode* matches more
        than one option, a warning is printed (this should not be possible
        with the current option set), but the operation proceeds.

    quiet
          --quiet
          -q

        The opposite effect of --verbose. Useful if $verbose is non-zero in
        the user's configuration file.

    index
          --index
          -x

        Add the Beyonwiz index name for the recording. This is the unique
        name for the recording used internally by WizPnP to refer to a it.
        The index name is also printed for verbosity level 4 or more. See
        --verbose.

    outDir
          --outDir=dir
          --outdir=dir
          -O dir

        Save the recordings in *dir* rather than in the current directory.
        --outdir is deprecated.

    inDir
          --inDir=dir
          --indir=dir
          -I dir

        Look for recordings in *dir* on the local computer rather than on
        the Beyonwiz. --indir is deprecated.

    List
          --List
          -L

        Produce only a list of the index names of the recordings in the
        recording index file. The options --folder and --recursive apply to
        --List.

        Intended for use by GUIs or other programs calling *getWizPnP*.

    check
          --check
          -c

        Perform some basic consistency checks on the recordings and media on
        the Beyonwiz, indicating missing and misnamed (in some instances)
        header files, and checking that the sizes of the header files are
        correct.

        Also check that all recording & media data files mentioned in the
        header files are on the Beyonwiz.

        Specifically:

        *   Checks that the main header file exists (if one is expected) and
            that it is the correct size, but it cannot distinguish between a
            completely missing recording folder and a folder that is missing
            its header file.

        *   Checks that the *trunc* header file exists (if one is expected)
            and that it is a valid size, and whether it is present but under
            a known incorrect name.

        *   Checks that the *stat* header file exists (if one is expected)
            and that it is the correct size, and whether it is present but
            under a known incorrect name.

        *   Checks that the data file indicated by each *trunc* file entry
            is large enough to contain the span of data indicated in the
            entry. Checks that the recording offset of each *trunc* entry
            after the first is consistent with the corresponding offset and
            lenght of the previous *trunc* entry. Makes no attempt to check
            the contents of the data files.

        The options --folder and --recursive apply to --check.

        If verbosity is non-zero, print the name of each recording and media
        file as it is checked. Normally only prints the names of recordings
        or media files where there is an error found.

        Without any further options, --check will only check recordings
        directly contained in the "Recordings" folder.

        To check all recordings on the recording HDD, use:

                getWizPnP --check --recursive

        To check all media files on the internal HDD, use:

                getWizPnP --check --folder=/Contents --recursive

        And to check all the recordings and media on the recording drive:

                getWizPnP --check --folder=/ --recursive

        --check and ephemeral IP ports - Advanced Users

        The process for --check produces large numbers of HTTP "HEAD"
        requests to test the existence and size of the files in the
        recordings it checks. These requests tpically take much less time
        than the HTTP "GET" requests that ate used to fetch recording and
        media data from the Beyonwiz. --check generates about 30 HTTP "HEAD"
        requests for each 1GB of recording data on the Beyonwiz. Because of
        limitations in the Beyonwiz HTTP server, each request creates a new
        TCP connection to the Beyonwiz. The local (computer) side uses an IP
        port number in the ephemeral ports range, and normally recovers the
        port number for reuse only 120 seconds after the request completes.
        The ports in the ephemeral ports range are shared by all
        applications using the Internet. Some older systems, Windows XP in
        particular, do not have a large number of these ports available,
        typically only 3976 of them. That is only enough to support --check
        to check about 130GB of recordings. If the available ephemeral ports
        are all in use (in this case mostly waiting the 120 seconds timeout
        after closing), then applications using the Internet protocols
        (including *getWizPnP*) can fail to make connections.

        For this reason, *getWizPnP* limits the number of ports that it
        holds in use by limiting the rate at which it issues HTTP requests.
        On systems that have only a small number of ephemeral ports
        available, it limits its own use of ports to 20% of the total number
        available (795 in the case of Windows XP). On systems with more
        generaous ephemeral port allocations (Windows Vista, Windows 7 and
        Windows 8, OS X and Linux) it limits its use of ephemeral ports to
        10% of the total available number (10% of 16384, or 1638 ports).

        These limitations mean that --check will take about 4.5 sec/GB of
        recordings on the Beyonwiz on Windows XP or earlier), and will take
        about 2.1 sec/GB on systems with more ports available.

        It is possible to increase the fraction of the available ephemeral
        ports that *getWizPnP* uses by setting
        $Beyonwiz::Recording::HTTPAccessor::ephemPortsFrac in the
        *getWizPnP* configuration file. It is probably inadvisable to set
        this value greater than 0.5 (50%).

        It is possible to increase the number of ephemeral ports available
        in Windows XP by modifications to the Registry by following the
        "Resolution" instructions in the Microsoft Support article *When you
        try to connect from TCP ports greater than 5000 you receive the
        error 'WSAENOBUFS (10055)'* at
        <http://support.microsoft.com/default.aspx?scid=kb;en-us;196271>. If
        you do this, you need to correspondingly set the number of available
        ephemeral ports by setting
        $Beyonwiz::Recording::HTTPAccessor::numEphemPorts in the *getWizPnP*
        configuration file. *getWizPnP* otherwise has no way of discovering
        the number of available ephemeral ports. Make a backup of your
        Registry before modifying it in this way.

        If *getWizPnP* does exhaust the available ephemeral ports, it will
        retry the request several times. The retries occur after a timeout,
        thus allowing closed ephemeral ports in use to time out and become
        available. If this happens, *getWizPnP* may stall for up to 2
        minutes.

    BWName
          --BWName
          -B

        The pattern arguments are recording index names as listed by --List.
        Can find Beyonwiz recordings faster than other matching methods,
        because it doesn't scan the whole file list. Unlike the other
        matching methods, must be an exact string match. Not very
        user-friendly. Intended for use by GUIs or other programs calling
        *getWizPnP*.

        Selection using --folder and --recursive still applies when using
        --BWName, so normally you'll want to use the same folder and
        recursion options with --BWName as you used with --List to generate
        the index name(s).

        Beyonwiz index names can contain spaces, and these will normally
        need to be quoted when including them in a command run by the
        operating system's command-line shell.

    discover
          --discover

        Print a list of the discovered Beyonwiz WizPnP servers, IP address
        and name, and exit. As in normal operation, the maximum number of
        devices to search for is set by --maxdevs. If --inDir is set, no
        Beyonwiz device search is performed, and *getWizPnP* exits
        immediately.

    wizpnpPoll
          --wizpnpPoll=npoll

        Sets the maximum number of search requests sent by a WizPnP device
        search before terminating the search. Defaults to 3.

    wizpnpTimeout
          --wizpnpTimeout=timeout

        Sets the maximum timeout (floating point seconds) used when waiting
        for a respnse to a WizPnP SSDP device search request. Defaults to
        0.3 sec.

FILES

    A small Perl file, ".getwizpnp" on Unix-like systems (MacOS X, Cygwin,
    Linux, etc) and "getwizpnp.conf" on Windows can be used to change the
    default values of a number of *getWizPnP* options.

    On Unix-like systems, the file ".getwizpnp" is searched for in the
    user's "HOME" directory, if "HOME" is set, or in the current directory
    if "HOME" is not set.

    On Windows, the file "getwizpnp.conf" is searched for in
    "%APPDATA%\Prl\getWizPnP" if "%APPDATA%" is set, and in *getWizPnP*'s
    current directory otherwise.

    "%APPDATA%" is normally set to "C:\Documents and
    Settings\"*userName*"\Application Data".

    If the configuration file exists, it is run as a piece of Perl code by
    *getWizPnP* just after the program defaults for options are set, and
    just before command-line options are set, so it over-rides program
    defaults, but not command-line options.

    It is probably most useful for setting the default --device or --host
    option, or making --episode set by default.

    An example *getWizPnP* configuration file file is included with the
    *getWizPnP* distribution, in the file "getwizpnp.conf".

    The *getWizPnP* configuration file can be specified explicitly by
    setting the "GETWIZPNPCONF" environment variable. For example (on Unix
    Bourne-like shells like *bash*):

        export GETWIZPNPCONF=~/mygetwizpnp.conf

    If "GETWIZPNPCONF" is set to the empty string, then no configuration
    file is executed:

        export GETWIZPNPCONF=

PREREQUSITES

    Uses packages "Beyonwiz::WizPnP", "Beyonwiz::Recording::HTTPAccessor",
    "Beyonwiz::Recording::FileAccessor", "Beyonwiz::Recording::Index",
    "Beyonwiz::Recording::Header", "Beyonwiz::Recording::Trunc",
    "Beyonwiz::Recording::Stat", "Beyonwiz::Recording::Recording",
    "Beyonwiz::Recording::Check", "File::Spec::Functions", "File::Path",
    "HTTP::Status", "Getopt::Long", "POSIX", "DateTime",
    "DateTime::Format::Natural".

BUGS

    Although a limited amount of testing has not found any problems, it is
    uncertain whether deleting a recording on the Beyonwiz while it is
    currently being watched can cause any malfunction on the Beyonwiz.
    Normally, the playback of the recording is stopped with an error message
    shortly after the recording is deleted. This may be impolite to the
    person watching, but so far does not appear to affect the Beyonwiz
    beyond that.

    The WizPnP search requires the use of the Perl package
    "IO::Socket::Multicast". This is available for download from CPAN for
    Mac OS X, Linux and Cygwin running under Windows. It is available only
    through and alternative PPM ActivePerl archive for Windows.

    WizPnP device search has intermittent failure on Windows with ActivePerl
    10, and on Cygwin. The search is either immediately successful or fails
    completely, even on retry.

    If WizPnP device search is used and "IO::Socket::Multicast" is not
    available, *getWizPnP* will exit with an error. In this case, the
    Beyonwiz device must be specified using --host (and --port if
    necessary).

    There is presently no "IO::Interface::Simple" module available in the
    ppm repository for ActivePerl 10.x for Windows. This means that
    --longNames will use longer names than it would if the module was
    available. *getWizPnP* will otherwise function normally.

    See README.txt in the distribution for details on how to install any
    Perl modules that *getWizPnP* needs to allow it to run on your system.

    Uses "bignum" for 64-bit integers, even when the underlying Perl
    integers are 64 bits.

    --move and --delete use undocumented features of WizPnP. This has a
    number of consequences:

    *   A recording can be deleted while it is being played on the Beyonwiz.
        Normally, the playback will simply finish abruptly. The same happens
        if *getWizPnP* deletes a recording on the WizPnP server while
        another Beyonwiz is playing the recording remotely using WizPnP.

    *   When a recording is deleted, the file player view won't be updated.
        Navigating in the file player, or exiting it and re-entering it does
        not update the view.

    *   The WizPnP's index of recordings (see --"index") on the Beyonwiz
        doesn't get updated when the recording on the Beyonwiz is deleted
        (directly or after the copy for a move). If you view the recordings
        on the Beyonwiz using WizFX, entries for deleted recordings appear
        in the WizFX list of recordings. These entries have no name, a date
        of 17/11/1858, and a size of 256kB. They can't be copied using
        WizFX. A recording deleted using *getWizPnP* on a Beyonwiz WizPnP
        server will appear normal in the file player on a Beyonwiz WizPnP
        client, but the recording cannot be played.

    The inconsistencies in the file player and the WizPnP index caused by
    --move and --delete can be fixed by entering the file player and
    pressing the SOUNDTRACK (speaker/question mark) button.

    Sorting on titles does not work with Beyonwiz firmware 01.05.261 and
    earlier. On some earlier firmware, sorting on time won't work if the
    recording has been renamed.

    Folder options (including sorting on folder name) do not work with
    Beyonwiz firmware 01.05.261 and earlier.

    --recursive has no effect if the Beyonwiz is running firmware 01.05.261
    or earlier.

    Folder options don't work properly in conjunction with --inDir.

    Instant recordings will not sort in their correct alphabetic sequence
    (sorting on time or date will work).

